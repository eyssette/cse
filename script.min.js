const searchEngine="https://paulgo.io/search?q=",setEngines="&engines=google&disabled_engines=brave",defineLang="&language=auto",cseDefault="# Créez votre moteur de recherche\n\n> Ce site vous permet de créer un moteur de recherche personnalisé à partir d'une liste de sites.\n> 1. Créez un fichier sur CodiMD ou sur une forge.\n> 2. Ce fichier doit comporter : un titre, un bloc de citation qui constituera le message initial, et une liste de sites. Vous pouvez récupérer [ce modèle](https://codimd.apps.education.fr/b8KAltV2QQWR2rKhF_eYcg?both) ou bien regarder cet [exemple](https://cse.forge.apps.education.fr/#https://eyssette.forge.apps.education.fr/my-cse/intro-philo.md).\n> 3. La recherche est plus pertinente si votre liste de sites n'est pas trop longue. Vous pouvez également utiliser le caractère générique `*`. Par exemple : `ac-*.fr` permet d'intégrer tous les sites `ac-lyon.fr`, `ac-grenoble.fr`, etc.\n> 4. Votre moteur de recherche sera alors disponible à l'adresse : https://cse.forge.apps.education.fr/#URL (en remplaçant URL par l'URL de votre fichier).\n> 5. Si votre fichier n'est pas accessible : essayez de mettre `https://api.allorigins.win/raw?url=` avant votre URL\n\n- eyssette.github.io";let md=cseDefault;const shortcuts=[["intro-philo","https://raw.githubusercontent.com/eyssette/my-cse/main/intro-philo.md"],["recherche-philo","https://raw.githubusercontent.com/eyssette/my-cse/main/recherche-philo.md"],["drane","https://raw.githubusercontent.com/eyssette/my-cse/main/drane.md"]];let cseSyntax="";function getMarkdownContent(){let e=window.location.hash.substring(1);""!==e?(e.startsWith("https://github.com")&&(e=e.replace("https://github.com","https://raw.githubusercontent.com"),e=e.replace("/blob/","/")),e.startsWith("https://codimd")&&-1===e.indexOf("download")&&(e=e.replace("?edit","").replace("?both","").replace("?view","").replace(/#$/,"")+"/download"),shortcut=shortcuts.find((t=>t[0]==e)),shortcut&&(e=shortcut[1]),fetch(e).then((e=>e.text())).then((e=>{md=e,cseData=parseMarkdown(md),createCSE(cseData)})).catch((e=>{cseData=parseMarkdown(cseDefault),createCSE(cseData),alert("Il y a une erreur dans l'URL. Merci de la vérifier et de vous assurer que le fichier est bien accessible.")}))):(cseData=parseMarkdown(md),createCSE(cseData))}function parseMarkdown(e){const t=e.split("\n");let s=[],n="Mon moteur de recherche personnalisé",r=!1,i=[],a=[];const o=/^- +(.+)/,c=new showdown.Converter({emoji:!0,parseImgDimensions:!0,simplifiedAutoLink:!0});for(let e of t)if(e.startsWith("# "))n=e.replace("# ","").trim();else if(e.startsWith(">")&&!r)e=e.replace(/^>\s?/,"").trim(),i.push(e);else{const t=e.match(o);if(t){r=!0;const e=t[1];a.push(e)}}var l;return 0==i.length&&(i=["Vous pouvez faire votre recherche ci-dessous"]),s=[n,(l=i.join("\n"),c.makeHtml(l)),a],s}getMarkdownContent();const userInput=document.getElementById("search-input"),sendButton=document.getElementById("send-button"),waitMessageElement=document.getElementById("wait-message"),loaderElement=document.getElementById("loader");function createCSE(e){const t=document.getElementById("cse-title"),s=document.getElementById("initial-message"),n=document.getElementById("search"),r=document.getElementById("credits"),i=e[0],a=e[1],o=e[2];t.innerHTML=i,s.innerHTML=a,cseSyntax=" (site:"+o.join(" OR site:")+")",n.style.visibility="visible",r.style.visibility="visible"}function search(e){loaderElement.style.display="block",waitMessageElement.style.visibility="visible",searchText=encodeURI(e)+" "+cseSyntax+defineLang+setEngines;const t=searchEngine+searchText;localStorage.setItem("searchLaunched","true"),window.location.href=t}userInput.focus(),sendButton.addEventListener("click",(()=>{search(userInput.value)})),userInput.addEventListener("keypress",(e=>{"Enter"===e.key&&sendButton.click()})),window.addEventListener("pageshow",(()=>{loaderElement.style.display="none",waitMessageElement.style.visibility="hidden"}));